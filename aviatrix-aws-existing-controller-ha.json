{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Aviatrix Systems - Creates the necessary policies, roles, security group and launches Aviatrix Controller instance",
  "Metadata" :
  {
    "AWS::CloudFormation::Interface" :
    {
      "ParameterGroups" :
      [
        {
          "Label" : { "default" : "Network Configuration" },
          "Parameters" : [ "VPCParam", "SubnetParam" ]
        },
        {
          "Label" : { "default":"Lambda function Configuration" },
          "Parameters" : [ "S3BucketParam" ]
        },
        {
          "Label" : { "default":"Aviatrix Controller Backup Configuration" },
          "Parameters" : [ "S3BucketBackupParam", "AwsAccessKeyParam", "AwsSecretKeyParam", "AviatrixUserParam", "AviatrixPassParam" ]
        }
      ],
      "ParameterLabels" :
      {
         "VPCParam" : { "default" : "Enter VPC of existing controller instance." },
         "SubnetParam" : { "default" : "Enter subnets in different Availability zones within that VPC." },
         "S3BucketParam": { "default" : "Enter S3 Bucket name which has aviatrix_ha.zip file." },
         "S3BucketBackupParam": { "default" : "Enter S3 Bucket which will be used to store backup files." },
         "AwsAccessKeyParam": { "default" : "Enter AWS Access Key with permission to access S3 bucket." },
         "AwsSecretKeyParam": { "default" : "Enter AWS Secret Key with permission to access S3 bucket." },
         "AviatrixUserParam": { "default" : "Enter Aviatrix Cloud account username used for backup." },
         "AviatrixPassParam": { "default" : "Enter Aviatrix Cloud account password used for backup." }
      }
    }
  },
  "Parameters":
  {
    "VPCParam":
      {
        "Type": "AWS::EC2::VPC::Id",
        "Description": "Select Your VPC"
      },
      "SubnetParam":
      {
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Description": "Select Subnets"
      },
      "S3BucketParam":
      {
        "Type": "String",
        "Description": "Enter S3 Bucket name which has aviatrix_ha.zip file."
      },
      "S3BucketBackupParam":
      {
        "Type": "String",
        "Description": "Enter S3 Bucket which will be used to store backup files."
      },
      "AwsAccessKeyParam":
      {
        "Type": "String",
        "Description": "Enter AWS Access Key with permission to access S3 bucket."
      },
      "AwsSecretKeyParam":
      {
        "Type": "String",
        "Description": "Enter AWS Secret Key with permission to access S3 bucket."
      },
      "AviatrixUserParam":
      {
        "Type": "String",
        "Description": "Enter Aviatrix Cloud account username used for backup."
      },
      "AviatrixPassParam":
      {
        "Type": "String",
        "Description": "Enter Aviatrix Cloud account password used for backup.",
        "NoEcho": true
      }
  },
  "Resources" :
  {
    "AviatrixRoleLambda" :
    {
      "Type": "AWS::IAM::Role",
      "Properties" :
      {
        "RoleName": "aviatrix-role-lambda",
        "AssumeRolePolicyDocument":
        {
          "Version" : "2012-10-17",
          "Statement":
          [
            {
              "Effect": "Allow",
              "Principal":
              {
                "Service": [ "lambda.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path" : "/",
        "Policies": [{
          "PolicyDocument" :
          {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:logs:*:*:*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:DescribeInstances",
                        "ec2:DescribeAddresses",
                        "ec2:AssociateAddress",
                        "ec2:DescribeImages",
                        "ec2:DeregisterImage",
                        "ec2:DescribeSnapshots",
                        "ec2:DeleteSnapshot",
                        "ec2:CreateImage",
                        "lambda:UpdateFunctionConfiguration",
                        "lambda:GetFunction",
                        "lambda:AddPermission",
                        "autoscaling:CreateLaunchConfiguration",
                        "autoscaling:CreateAutoScalingGroup",
                        "autoscaling:AttachInstances",
                        "autoscaling:PutNotificationConfiguration",
                        "autoscaling:DescribeAutoScalingGroups",
                        "autoscaling:UpdateAutoScalingGroup",
                        "autoscaling:DeleteLaunchConfiguration",
                        "sns:CreateTopic",
                        "sns:Subscribe",
                        "ssm:SendCommand",
                        "ssm:ListCommandInvocations"
                    ],
                    "Resource": "*"
                }
            ]
          },
          "PolicyName": "AviatrixLambdaRolePolicy"
        }]
      }
    },
    "AviatrixLambda" : {
       "Type" : "AWS::Lambda::Function",
       "Properties" : {
          "Code" : {"S3Bucket" : { "Ref" : "S3BucketParam" }, "S3Key" : "aviatrix_ha.zip"},
          "Environment" : {
            "Variables": { 
              "ASG_NAME" : "AviatrixController",
              "SUBNETLIST" : {"Fn::Join": [",", { "Ref": "SubnetParam" }]},
              "S3_BUCKET_PARAM" : { "Ref" : "S3BucketBackupParam" },
              "AWS_ACCESS_KEY_BACK" : { "Ref" : "AwsAccessKeyParam" },
              "AWS_SECRET_KEY_BACK" : { "Ref" : "AwsSecretKeyParam" },
              "AVIATRIX_USER_BACK" : { "Ref" : "AviatrixUserParam" },
              "AVIATRIX_PASS_BACK" : { "Ref" : "AviatrixPassParam" }
            }
          },
          "FunctionName" : "enable_ha",
          "Handler" : "aviatrix_ha.lambda_handler",
          "Role" : {"Fn::GetAtt": [ "AviatrixRoleLambda", "Arn" ]},
          "Runtime" : "python2.7",
          "Timeout" : "60",
       }
    },
    "SetupHA": {
      "Type": "Custom::SetupHA",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["AviatrixLambda", "Arn"] }
      }
    }
  },
  "Outputs" :
  {
    "AccountId" :
    {
      "Description": "Amazon Account ID",
      "Value" : { "Ref" : "AWS::AccountId" }
    },
    "SUBNETLIST" :
    {
      "Description": "SUBNET_LIST",
      "Value" : {"Fn::Join": [",", { "Ref": "SubnetParam" }]}
    }

  }
}
